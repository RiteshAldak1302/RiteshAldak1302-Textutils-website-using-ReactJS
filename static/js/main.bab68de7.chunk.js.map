{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","placeholder","Textform","useState","text","setText","backgroundColor","color","style","setDarkStyle","textStyle","setTextStyle","role","display","flexDirection","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","body","background","htmlFor","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bab68de7.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import React, { useState } from 'react'\r\n//use shortcut rf then enter\r\nexport default function Navbar(props) {\r\n\r\n  // const [mode, setMode] = useState(\"primary\")\r\n  // // const handleMode =()=>{\r\n  // //    if(mode ===\"primary\"){\r\n  // //     setMode(\"dark\");\r\n  // //  }\r\n  // //  else{\r\n  // //    setMode(\"primary\");\r\n  // //  }\r\n  // //  }\r\n\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-dark bg-primary`} >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n            \r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" href=\"/about\">About</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" href=\"/\">Contact</Link>\r\n              </li> */}\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success bg-light \" type=\"submit\">Search</button>\r\n          </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      \r\n    )\r\n}\r\n","      import React ,{useState} from 'react'\r\n\r\n      export default function Textform(props) {\r\n           \r\n          //it convert text in Upper case\r\n        const handleUpClick = ()=>{\r\n          // console.log('Convert to upper case was clicked' + text);\r\n          const newText = text.toUpperCase();\r\n          setText(newText);\r\n        }\r\n        //it convert text in lower case\r\n        const handleLowClick = ()=>{\r\n          const newText = text.toLowerCase();\r\n          setText(newText);\r\n        }\r\n        //it clear complete text\r\n        const handleClearClick = ()=>{\r\n          const newText = \"\";\r\n          setText(newText);\r\n        }\r\n        //it copy complete text\r\n        const handleCopy = ()=>{\r\n          var text = document.getElementById('myBox');\r\n          text.select();\r\n          navigator.clipboard.writeText(text.value);\r\n        }\r\n        const handleMode = ()=>{\r\n          if(style.backgroundColor === \"white\"){\r\n            setDarkStyle({backgroundColor:'#08141f',color:'white'})\r\n            setTextStyle({backgroundColor:'grey',color:'white'})\r\n            document.body.style.background = '#08141f';\r\n          }\r\n          if(style.backgroundColor === \"#08141f\"){\r\n            setDarkStyle({backgroundColor:'white',color:'black'})\r\n            setTextStyle({backgroundColor:'white',color:'black'})\r\n            document.body.style.background = 'white';\r\n          }\r\n        }\r\n\r\n        // it handle extra spaces\r\n        const handleExtraSpaces = ()=>{\r\n          let newText = text.split(/[ ]+/);\r\n          setText(newText.join(\" \"))\r\n        }\r\n        // const download=(filename, text)=>{\r\n        //   var element = document.createElement('a');\r\n        //   element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        //   element.setAttribute('download', filename);\r\n        //   element.style.display = 'none'; document.body.appendChild(element);\r\n        //   element.click(); document.body.removeChild(element);\r\n\r\n\r\n           //this is permeanent code (function) eto take the input \r\n           // this is to write in input\r\n        const handleOnChange = (event)=>{\r\n          setText(event.target.value) \r\n        } \r\n\r\n          \r\n\r\n        let myStyle ={\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          // marginLeft: '200px'\r\n        }\r\n      \r\n      const[text,setText] = useState(\"\");\r\n      // const[mode,setMode] = useState(\"light\");\r\n      const[style,setDarkStyle] = useState({backgroundColor :'white',color:'black'});\r\n      const[textStyle,setTextStyle] = useState({backgroundColor :'white',color:'black'});\r\n\r\n          return (\r\n              <>\r\n          <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n           <strong>Information :</strong> TextUtils is the text based utility and you can manupilate your text.\r\n           <button type=\"button\" className=\"btn-close alert-dismissible fade show\" data-bs-dismiss=\"alert\" aria-hidden=\"true\" aria-label=\"Close\"></button>\r\n        </div>\r\n      <div className=\"container\" style={myStyle}>\r\n\r\n     <div className=\"container\" style={style} >\r\n      <div className=\"mb-3 my-3 \"  >\r\n        <h1>{props.heading}</h1>\r\n        <textarea className=\"form-control\" value={text}   onChange={handleOnChange} style={textStyle} id=\"myBox\" rows=\"8\" placeholder=\"Enter Your Text\"></textarea>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary my-3\" onClick={handleUpClick} >Convert to UpperCase</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleLowClick} >Convert to LowerCase</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleClearClick} >Clear Text</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleCopy} >Copy Text</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n        \r\n      </div>\r\n      </div>\r\n      <div className=\"form-check form-switch  my-3\" >\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={handleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={style}>Enable dark mode</label>\r\n</div>\r\n\r\n\r\n    </div>\r\n      <div className=\"container my-3 \" style={style}>\r\n        <h2>Your Text Summary</h2> <hr/> \r\n        <p> <b> {text.split(\" \").length } words and {text.length}  characters</b></p>\r\n        <p><b>{0.008 * text.split(\" \").length} Minutes read </b></p>\r\n        <hr /> \r\n        <h3>Preview <hr /> </h3>\r\n        <p>{text}</p>\r\n</div>\r\n\r\n        </>\r\n    )\r\n}\r\n","// import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';   // also use this code to import Navbar component here\nimport Textform from './components/Textform'; \n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n\n// } from \"react-router-dom\";\nfunction App() {\n  // this will equal to Navbar component code  --> <Navbar/>\n  \n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\"  />\n    <div className=\"container\">\n    {/* <Switch>\n      {/* always use exact with path as written below */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          </Route>\n        </Switch> */}\n    \n    {/* <About/>  */}\n        {/* // </Router> */}\n        <Textform heading=\"Enter the Text to Analyze\"   />\n      </div> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}